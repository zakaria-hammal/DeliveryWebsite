@page "/products/addproduct"
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthStateProvider
@attribute [Authorize]

<PageTitle>Ajouter un produit</PageTitle>

@if(Categories == null)
{
    <p><em>Chargement...</em></p>
}
else if(Categories.Count == 0)
{
    <p>Vous devez d'abord ajouter des categories</p>
}
else
{
    <label>Nom du Produit :</label><br>
    <input type="text" placeholder="Produit" @bind="@product.ProductName" required><br><br>

    <label>Prix :</label>
    <input type="number" placeholder="Prix" @bind="@product.Price" step="0.01" formnovalidate required><br><br>

    <label>Description :</label><br>
    <textarea placeholder="Description" @bind="@product.Description"></textarea><br><br>

    <label>Categorie :</label><br>
    <InputSelect @bind-Value="@product.CategoryName">
        <Option value="Name">Categorie</Option>
        @foreach (var category in Categories)
        {
            <option value="@category.CategoryName">@category.CategoryName</option>
        }
    </InputSelect><br><br>

    <InputFile OnChange="HandleFileChange" accept="image/*" /><br><br>
    @((MarkupString)message)

    <button class="btn btn-primary" @onclick="@RegisterProduct">Ajouter</button>
}

@code {
    private IBrowserFile? File{get; set;}
    private Product? product{get; set;} = new();
    private List<Category>? Categories{get; set;}
    private string message{get; set;} = String.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await AuthStateProvider.GetAuthenticationStateAsync();

        Categories = new();

        var response = await Http.GetAsync("api/Stock/GetCategories");

        if(response.IsSuccessStatusCode)
        {
            Categories = await Http.GetFromJsonAsync<List<Category>>("api/Stock/GetCategories");
        }
    }

    private void HandleFileChange(InputFileChangeEventArgs e)
    {
        File = e.File;
    }

    private async Task RegisterProduct()
    {
        var response = await Http.PostAsJsonAsync("api/Stock/PostProduct", product);
        if(response.IsSuccessStatusCode)
        {
            var file = File;
            if(file != null)
            {
                var buffer = new byte[file.Size];

                await file.OpenReadStream(10485760).ReadAsync(buffer);

                var content = new MultipartFormDataContent();
                var fileContent = new ByteArrayContent(buffer);
                fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(file.ContentType);
                content.Add(new StreamContent(file.OpenReadStream(100 * 1024 * 1024)), "ImageFile", file.Name);
                content.Add(new StringContent(product.ProductName), "Description");

                var response1 = await Http.PostAsync("api/Image/upload", content);
            }
            navigationManager.NavigateTo("/products", forceLoad:true);
        }
        else
        {
            message = "<p>Veuillez remplire tous les champs</p><br><br>";
        }
    }
}